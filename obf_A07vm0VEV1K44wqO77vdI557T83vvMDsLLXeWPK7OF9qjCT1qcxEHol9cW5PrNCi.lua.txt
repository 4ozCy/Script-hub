--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.3) ~  Much Love, Ferib 

]]--

local v0 = tonumber;
local v1 = string.byte;
local v2 = string.char;
local v3 = string.sub;
local v4 = string.gsub;
local v5 = string.rep;
local v6 = table.concat;
local v7 = table.insert;
local v8 = math.ldexp;
local v9 = getfenv or function()
	return _ENV;
end;
local v10 = setmetatable;
local v11 = pcall;
local v12 = select;
local v13 = unpack or table.unpack;
local v14 = tonumber;
local function v15(v16, v17, ...)
	local v18 = 1;
	local v19;
	v16 = v4(v3(v16, 5), "..", function(v30)
		if (v1(v30, 2) == 79) then
			v19 = v0(v3(v30, 1, 1));
			return "";
		else
			local v69 = v2(v0(v30, 16));
			if v19 then
				local v75 = v5(v69, v19);
				v19 = nil;
				return v75;
			else
				return v69;
			end
		end
	end);
	local function v20(v31, v32, v33)
		if v33 then
			local v70 = (v31 / (((1642 - (1523 + 114)) - 3) ^ (v32 - (2 - 1)))) % (((3 + 0) - 1) ^ (((v33 - (2 - 1)) - (v32 - (620 - (555 + (91 - 27))))) + (1066 - (68 + 997))));
			return v70 - (v70 % (932 - (857 + 74)));
		else
			local v71 = (570 - (367 + 201)) ^ (v32 - (928 - (214 + 713)));
			return (((v31 % (v71 + v71)) >= v71) and ((1271 - (226 + 1044)) + (877 - (282 + 595)))) or (0 + 0);
		end
	end
	local function v21()
		local v34 = 0 - 0;
		local v35;
		while true do
			if (v34 == 1) then
				return v35;
			end
			if (v34 == (117 - (32 + 85))) then
				v35 = v1(v16, v18, v18);
				v18 = v18 + (958 - (892 + 65)) + (0 - 0);
				v34 = 1 + 0;
			end
		end
	end
	local function v22()
		local v36, v37 = v1(v16, v18, v18 + (3 - 1));
		v18 = v18 + (3 - 1);
		return (v37 * (606 - (87 + 263))) + v36;
	end
	local function v23()
		local v38 = 0 - 0;
		local v39;
		local v40;
		local v41;
		local v42;
		while true do
			if (v38 == (180 - (67 + 113))) then
				v39, v40, v41, v42 = v1(v16, v18, v18 + (7 - 4));
				v18 = v18 + (6 - 2);
				v38 = 1;
			end
			if (v38 == (1 + 0)) then
				return (v42 * (41190819 - 24413603)) + (v41 * (48199 + 17337)) + (v40 * (1017 - (1948 - (1069 + 118)))) + v39;
			end
		end
	end
	local function v24()
		local v43 = v23();
		local v44 = v23();
		local v45 = 2 - 1;
		local v46 = (v20(v44, 1 - 0, 4 + (56 - 40)) * ((3 - 1) ^ (32 + 0 + 0))) + v43;
		local v47 = v20(v44, 812 - (368 + 423), (354 - 257) - 66);
		local v48 = ((v20(v44, 50 - (10 + 8)) == (3 - 2)) and -(443 - (416 + 26))) or 1;
		if (v47 == (0 - 0)) then
			if (v46 == (0 + 0)) then
				return v48 * ((859 - (814 + 45)) - 0);
			else
				v47 = 439 - (145 + 293);
				v45 = 0;
			end
		elseif (v47 == ((6102 - 3625) - (44 + 386))) then
			return ((v46 == (1486 - (998 + 488))) and (v48 * ((1 + 0) / (0 + 0)))) or (v48 * NaN);
		end
		return v8(v48, v47 - (1795 - (201 + 571))) * (v45 + (v46 / ((1140 - (116 + 1022)) ^ (216 - 164))));
	end
	local function v25(v49)
		local v50 = (0 + 0) - 0;
		local v51;
		local v52;
		while true do
			if (v50 == (1 + 1)) then
				v52 = {};
				for v76 = 1 + 0, #v51 do
					v52[v76] = v2(v1(v3(v51, v76, v76)));
				end
				v50 = 3;
			end
			if (v50 == 0) then
				v51 = nil;
				if not v49 then
					local v92 = (1055 - (87 + 968)) - 0;
					while true do
						if (v92 == ((0 - 0) + (0 - 0))) then
							v49 = v23();
							if (v49 == (885 - (261 + 624))) then
								return "";
							end
							break;
						end
					end
				end
				v50 = 1 - 0;
			end
			if (v50 == (1916 - (1789 + 124))) then
				return v6(v52);
			end
			if ((1081 - (1020 + 1 + 59)) == v50) then
				v51 = v3(v16, v18, (v18 + v49) - (1424 - (572 + 58 + 793)));
				v18 = v18 + v49;
				v50 = 6 - 4;
			end
		end
	end
	local v26 = v23;
	local function v27(...)
		return {...}, v12("#", ...);
	end
	local function v28()
		local v53 = 0;
		local v54;
		local v55;
		local v56;
		local v57;
		local v58;
		local v59;
		local v60;
		local v61;
		while true do
			if (v53 ~= (1709 - (856 + 851))) then
			else
				v58 = nil;
				v59 = nil;
				v53 = 3;
			end
			if (v53 ~= (1766 - (454 + 1309))) then
			else
				v60 = nil;
				v61 = nil;
				v53 = 2 + 2;
			end
			if ((5 - 1) ~= v53) then
			else
				while true do
					if (v54 == (3 - 0)) then
						v61 = nil;
						while true do
							if (v55 ~= (2 - 1)) then
							else
								local v103 = 285 - (134 + 151);
								while true do
									if (v103 == (1666 - (970 + 695))) then
										local v106 = 0;
										while true do
											if (v106 == (0 - 0)) then
												for v110 = 1, v60 do
													local v111 = 0;
													local v112;
													local v113;
													while true do
														if (v111 == 0) then
															v112 = v21();
															v113 = nil;
															v111 = 1991 - (582 + 1408);
														end
														if (v111 == 1) then
															if (v112 == 1) then
																v113 = v21() ~= (0 - 0);
															elseif (v112 == 2) then
																v113 = v24();
															elseif (v112 ~= 3) then
															else
																v113 = v25();
															end
															v61[v110] = v113;
															break;
														end
													end
												end
												v59[3 - 0] = v21();
												v106 = 1;
											end
											if (v106 ~= (3 - 2)) then
											else
												v103 = 2;
												break;
											end
										end
									end
									if (v103 == (1826 - (1195 + 629))) then
										v55 = 2 - 0;
										break;
									end
									if (v103 == 0) then
										local v107 = 241 - (187 + 54);
										while true do
											if (v107 ~= 1) then
											else
												v103 = 781 - (162 + 618);
												break;
											end
											if (v107 == (0 + 0)) then
												v60 = v23();
												v61 = {};
												v107 = 1 + 0;
											end
										end
									end
								end
							end
							if (v55 == (3 - 1)) then
								local v104 = 0 - 0;
								while true do
									local v105 = 0;
									while true do
										if (v105 ~= 0) then
										else
											if (v104 ~= 1) then
											else
												return v59;
											end
											if ((0 + 0) == v104) then
												local v109 = 0;
												while true do
													if (v109 == (1636 - (1373 + 263))) then
														for v115 = 1001 - (451 + 549), v23() do
															local v116 = 0;
															local v117;
															local v118;
															while true do
																if (v116 == (1 + 0)) then
																	while true do
																		if (0 ~= v117) then
																		else
																			v118 = v21();
																			if (v20(v118, 1, 1) ~= (0 - 0)) then
																			else
																				local v393 = 0 - 0;
																				local v394;
																				local v395;
																				local v396;
																				while true do
																					if (v393 ~= (1386 - (746 + 638))) then
																					else
																						if (v20(v395, 1 + 0, 1) ~= (1 - 0)) then
																						else
																							v396[2] = v61[v396[343 - (218 + 123)]];
																						end
																						if (v20(v395, 2, 1583 - (1535 + 46)) == (1 + 0)) then
																							v396[1 + 2] = v61[v396[563 - (306 + 254)]];
																						end
																						v393 = 3;
																					end
																					if (v393 ~= (1 + 0)) then
																					else
																						local v415 = 0;
																						while true do
																							if (v415 == (1 - 0)) then
																								v393 = 1469 - (899 + 568);
																								break;
																							end
																							if (v415 == 0) then
																								v396 = {v22(),v22(),nil,nil};
																								if (v394 == 0) then
																									local v425 = 0 - 0;
																									local v426;
																									while true do
																										if (0 == v425) then
																											v426 = 0;
																											while true do
																												if (0 == v426) then
																													v396[3] = v22();
																													v396[4] = v22();
																													break;
																												end
																											end
																											break;
																										end
																									end
																								elseif (v394 == 1) then
																									v396[3] = v23();
																								elseif (v394 == 2) then
																									v396[606 - (268 + 335)] = v23() - ((292 - (60 + 230)) ^ 16);
																								elseif (v394 ~= 3) then
																								else
																									local v431 = 572 - (426 + 146);
																									local v432;
																									while true do
																										if (v431 == 0) then
																											v432 = 0 + 0;
																											while true do
																												if (v432 == (1456 - (282 + 1174))) then
																													v396[814 - (569 + 242)] = v23() - (2 ^ (46 - 30));
																													v396[1 + 3] = v22();
																													break;
																												end
																											end
																											break;
																										end
																									end
																								end
																								v415 = 1025 - (706 + 318);
																							end
																						end
																					end
																					if (v393 == 3) then
																						if (v20(v395, 3, 1254 - (721 + 530)) == (1272 - (945 + 326))) then
																							v396[9 - 5] = v61[v396[4]];
																						end
																						v56[v115] = v396;
																						break;
																					end
																					if (v393 == 0) then
																						local v417 = 0 + 0;
																						while true do
																							if (v417 ~= (700 - (271 + 429))) then
																							else
																								local v424 = 0 + 0;
																								while true do
																									if (v424 == (1500 - (1408 + 92))) then
																										v394 = v20(v118, 2, 1089 - (461 + 625));
																										v395 = v20(v118, 4, 6);
																										v424 = 1;
																									end
																									if (v424 ~= 1) then
																									else
																										v417 = 1;
																										break;
																									end
																								end
																							end
																							if (v417 == 1) then
																								v393 = 1289 - (993 + 295);
																								break;
																							end
																						end
																					end
																				end
																			end
																			break;
																		end
																	end
																	break;
																end
																if (0 == v116) then
																	local v138 = 0;
																	while true do
																		if (1 ~= v138) then
																		else
																			v116 = 1;
																			break;
																		end
																		if ((0 + 0) ~= v138) then
																		else
																			v117 = 0;
																			v118 = nil;
																			v138 = 1172 - (418 + 753);
																		end
																	end
																end
															end
														end
														for v119 = 1, v23() do
															v57[v119 - 1] = v28();
														end
														v109 = 1 + 0;
													end
													if (v109 ~= (1 + 0)) then
													else
														v104 = 1;
														break;
													end
												end
											end
											break;
										end
									end
								end
							end
							if (v55 ~= (0 + 0)) then
							else
								v56 = {};
								v57 = {};
								v58 = {};
								v59 = {v56,v57,nil,v58};
								v55 = 1770 - (1749 + 20);
							end
						end
						break;
					end
					if (v54 == 2) then
						v59 = nil;
						v60 = nil;
						v54 = 1 + 2;
					end
					if (0 == v54) then
						local v95 = 0;
						while true do
							if (v95 == (1322 - (1249 + 73))) then
								v55 = 0 + 0;
								v56 = nil;
								v95 = 1;
							end
							if (v95 == (1146 - (466 + 679))) then
								v54 = 2 - 1;
								break;
							end
						end
					end
					if ((2 - 1) == v54) then
						local v96 = 0;
						while true do
							if (v96 ~= (1900 - (106 + 1794))) then
							else
								v57 = nil;
								v58 = nil;
								v96 = 1 + 0;
							end
							if (v96 == (1 + 0)) then
								v54 = 5 - 3;
								break;
							end
						end
					end
				end
				break;
			end
			if ((0 - 0) == v53) then
				v54 = 0;
				v55 = nil;
				v53 = 115 - (4 + 110);
			end
			if (1 ~= v53) then
			else
				v56 = nil;
				v57 = nil;
				v53 = 2;
			end
		end
	end
	local function v29(v62, v63, v64)
		local v65 = 0;
		local v66;
		local v67;
		local v68;
		while true do
			if (v65 == 0) then
				v66 = v62[1];
				v67 = v62[2];
				v65 = 1;
			end
			if (1 == v65) then
				v68 = v62[3];
				return function(...)
					local v78 = v66;
					local v79 = v67;
					local v80 = v68;
					local v81 = v27;
					local v82 = 1;
					local v83 = -1;
					local v84 = {};
					local v85 = {...};
					local v86 = v12("#", ...) - 1;
					local v87 = {};
					local v88 = {};
					for v93 = 0, v86 do
						if (v93 >= v80) then
							v84[v93 - v80] = v85[v93 + 1];
						else
							v88[v93] = v85[v93 + 1];
						end
					end
					local v89 = (v86 - v80) + 1;
					local v90;
					local v91;
					while true do
						local v94 = 0;
						while true do
							if (v94 == 1) then
								if (v91 <= 55) then
									if (v91 <= 27) then
										if (v91 <= 13) then
											if (v91 <= 6) then
												if (v91 <= 2) then
													if (v91 <= 0) then
														v88[v90[2]][v90[3]] = v90[4];
													elseif (v91 == 1) then
														local v139 = 0;
														local v140;
														local v141;
														local v142;
														while true do
															if (v139 == 2) then
																for v369 = 1, v90[4] do
																	v82 = v82 + 1;
																	local v370 = v78[v82];
																	if (v370[1] == 19) then
																		v142[v369 - 1] = {v88,v370[3]};
																	else
																		v142[v369 - 1] = {v63,v370[3]};
																	end
																	v87[#v87 + 1] = v142;
																end
																v88[v90[2]] = v29(v140, v141, v64);
																break;
															end
															if (v139 == 1) then
																v142 = {};
																v141 = v10({}, {__index=function(v372, v373)
																	local v374 = v142[v373];
																	return v374[1][v374[2]];
																end,__newindex=function(v375, v376, v377)
																	local v378 = v142[v376];
																	v378[1][v378[2]] = v377;
																end});
																v139 = 2;
															end
															if (v139 == 0) then
																v140 = v79[v90[3]];
																v141 = nil;
																v139 = 1;
															end
														end
													else
														local v143 = v90[2];
														do
															return v13(v88, v143, v83);
														end
													end
												elseif (v91 <= 4) then
													if (v91 > 3) then
														local v144 = v90[2];
														v88[v144] = v88[v144](v88[v144 + 1]);
													else
														local v146 = v90[2];
														local v147 = v88[v146];
														local v148 = v90[3];
														for v288 = 1, v148 do
															v147[v288] = v88[v146 + v288];
														end
													end
												elseif (v91 > 5) then
													do
														return;
													end
												else
													local v149 = v90[2];
													local v150 = v88[v90[3]];
													v88[v149 + 1] = v150;
													v88[v149] = v150[v90[4]];
												end
											elseif (v91 <= 9) then
												if (v91 <= 7) then
													local v123 = v88[v90[4]];
													if v123 then
														v82 = v82 + 1;
													else
														v88[v90[2]] = v123;
														v82 = v90[3];
													end
												elseif (v91 > 8) then
													local v156 = v79[v90[3]];
													local v157;
													local v158 = {};
													v157 = v10({}, {__index=function(v291, v292)
														local v293 = v158[v292];
														return v293[1][v293[2]];
													end,__newindex=function(v294, v295, v296)
														local v297 = v158[v295];
														v297[1][v297[2]] = v296;
													end});
													for v299 = 1, v90[4] do
														v82 = v82 + 1;
														local v300 = v78[v82];
														if (v300[1] == 19) then
															v158[v299 - 1] = {v88,v300[3]};
														else
															v158[v299 - 1] = {v63,v300[3]};
														end
														v87[#v87 + 1] = v158;
													end
													v88[v90[2]] = v29(v156, v157, v64);
												else
													v88[v90[2]] = v90[3] ~= 0;
												end
											elseif (v91 <= 11) then
												if (v91 == 10) then
													v88[v90[2]] = v88[v90[3]] / v90[4];
												else
													v88[v90[2]] = v90[3] / v90[4];
												end
											elseif (v91 == 12) then
												v88[v90[2]] = not v88[v90[3]];
											elseif (v88[v90[2]] ~= v90[4]) then
												v82 = v82 + 1;
											else
												v82 = v90[3];
											end
										elseif (v91 <= 20) then
											if (v91 <= 16) then
												if (v91 <= 14) then
													if (v88[v90[2]] == v90[4]) then
														v82 = v82 + 1;
													else
														v82 = v90[3];
													end
												elseif (v91 == 15) then
													if (v90[2] < v88[v90[4]]) then
														v82 = v82 + 1;
													else
														v82 = v90[3];
													end
												else
													local v165 = 0;
													local v166;
													local v167;
													while true do
														if (v165 == 0) then
															v166 = v90[3];
															v167 = v88[v166];
															v165 = 1;
														end
														if (v165 == 1) then
															for v380 = v166 + 1, v90[4] do
																v167 = v167 .. v88[v380];
															end
															v88[v90[2]] = v167;
															break;
														end
													end
												end
											elseif (v91 <= 18) then
												if (v91 > 17) then
													local v168 = 0;
													local v169;
													while true do
														if (v168 == 0) then
															v169 = v90[2];
															v88[v169](v13(v88, v169 + 1, v90[3]));
															break;
														end
													end
												else
													v88[v90[2]] = v88[v90[3]][v90[4]];
												end
											elseif (v91 > 19) then
												do
													return v88[v90[2]];
												end
											else
												v88[v90[2]] = v88[v90[3]];
											end
										elseif (v91 <= 23) then
											if (v91 <= 21) then
												if (v90[2] == v88[v90[4]]) then
													v82 = v82 + 1;
												else
													v82 = v90[3];
												end
											elseif (v91 > 22) then
												do
													return;
												end
											elseif (v88[v90[2]] ~= v88[v90[4]]) then
												v82 = v82 + 1;
											else
												v82 = v90[3];
											end
										elseif (v91 <= 25) then
											if (v91 == 24) then
												local v175 = 0;
												local v176;
												local v177;
												local v178;
												local v179;
												while true do
													if (v175 == 1) then
														v83 = (v178 + v176) - 1;
														v179 = 0;
														v175 = 2;
													end
													if (v175 == 0) then
														v176 = v90[2];
														v177, v178 = v81(v88[v176](v13(v88, v176 + 1, v90[3])));
														v175 = 1;
													end
													if (v175 == 2) then
														for v381 = v176, v83 do
															local v382 = 0;
															while true do
																if (v382 == 0) then
																	v179 = v179 + 1;
																	v88[v381] = v177[v179];
																	break;
																end
															end
														end
														break;
													end
												end
											else
												v88[v90[2]] = -v88[v90[3]];
											end
										elseif (v91 == 26) then
											v88[v90[2]] = v88[v90[3]] - v88[v90[4]];
										else
											v88[v90[2]][v90[3]] = v88[v90[4]];
										end
									elseif (v91 <= 41) then
										if (v91 <= 34) then
											if (v91 <= 30) then
												if (v91 <= 28) then
													v88[v90[2]]();
												elseif (v91 == 29) then
													v88[v90[2]] = v88[v90[3]] * v88[v90[4]];
												else
													v88[v90[2]] = v88[v90[3]] + v90[4];
												end
											elseif (v91 <= 32) then
												if (v91 > 31) then
													v88[v90[2]] = {};
												else
													v88[v90[2]] = v64[v90[3]];
												end
											elseif (v91 > 33) then
												v88[v90[2]] = not v88[v90[3]];
											else
												local v190 = v90[2];
												v88[v190] = v88[v190]();
											end
										elseif (v91 <= 37) then
											if (v91 <= 35) then
												v88[v90[2]] = v90[3];
											elseif (v91 > 36) then
												v88[v90[2]] = v88[v90[3]] + v88[v90[4]];
											else
												v88[v90[2]] = v29(v79[v90[3]], nil, v64);
											end
										elseif (v91 <= 39) then
											if (v91 > 38) then
												v88[v90[2]] = {};
											else
												local v195 = 0;
												local v196;
												while true do
													if (v195 == 0) then
														v196 = v90[2];
														v88[v196](v13(v88, v196 + 1, v83));
														break;
													end
												end
											end
										elseif (v91 > 40) then
											v82 = v90[3];
										else
											v82 = v90[3];
										end
									elseif (v91 <= 48) then
										if (v91 <= 44) then
											if (v91 <= 42) then
												v88[v90[2]] = v88[v90[3]][v88[v90[4]]];
											elseif (v91 == 43) then
												v88[v90[2]] = v88[v90[3]] / v90[4];
											elseif (v88[v90[2]] < v90[4]) then
												v82 = v82 + 1;
											else
												v82 = v90[3];
											end
										elseif (v91 <= 46) then
											if (v91 > 45) then
												v88[v90[2]] = v29(v79[v90[3]], nil, v64);
											else
												v88[v90[2]][v90[3]] = v88[v90[4]];
											end
										elseif (v91 > 47) then
											local v203 = 0;
											local v204;
											local v205;
											local v206;
											while true do
												if (v203 == 1) then
													v206 = 0;
													for v383 = v204, v90[4] do
														v206 = v206 + 1;
														v88[v383] = v205[v206];
													end
													break;
												end
												if (v203 == 0) then
													v204 = v90[2];
													v205 = {v88[v204](v88[v204 + 1])};
													v203 = 1;
												end
											end
										else
											v88[v90[2]][v90[3]] = v90[4];
										end
									elseif (v91 <= 51) then
										if (v91 <= 49) then
											v88[v90[2]] = -v88[v90[3]];
										elseif (v91 == 50) then
											if v88[v90[2]] then
												v82 = v82 + 1;
											else
												v82 = v90[3];
											end
										elseif (v88[v90[2]] == v88[v90[4]]) then
											v82 = v82 + 1;
										else
											v82 = v90[3];
										end
									elseif (v91 <= 53) then
										if (v91 == 52) then
											local v209 = 0;
											local v210;
											local v211;
											while true do
												if (v209 == 0) then
													v210 = v90[2];
													v211 = {};
													v209 = 1;
												end
												if (v209 == 1) then
													for v386 = 1, #v87 do
														local v387 = v87[v386];
														for v397 = 0, #v387 do
															local v398 = v387[v397];
															local v399 = v398[1];
															local v400 = v398[2];
															if ((v399 == v88) and (v400 >= v210)) then
																v211[v400] = v399[v400];
																v398[1] = v211;
															end
														end
													end
													break;
												end
											end
										else
											local v212 = v90[2];
											local v213 = v90[4];
											local v214 = v212 + 2;
											local v215 = {v88[v212](v88[v212 + 1], v88[v214])};
											for v302 = 1, v213 do
												v88[v214 + v302] = v215[v302];
											end
											local v216 = v215[1];
											if v216 then
												v88[v214] = v216;
												v82 = v90[3];
											else
												v82 = v82 + 1;
											end
										end
									elseif (v91 > 54) then
										v88[v90[2]] = v90[3];
									else
										v88[v90[2]] = v88[v90[3]] + v90[4];
									end
								elseif (v91 <= 83) then
									if (v91 <= 69) then
										if (v91 <= 62) then
											if (v91 <= 58) then
												if (v91 <= 56) then
													if not v88[v90[2]] then
														v82 = v82 + 1;
													else
														v82 = v90[3];
													end
												elseif (v91 > 57) then
													if (v88[v90[2]] < v88[v90[4]]) then
														v82 = v82 + 1;
													else
														v82 = v90[3];
													end
												else
													v88[v90[2]] = v88[v90[3]] * v88[v90[4]];
												end
											elseif (v91 <= 60) then
												if (v91 > 59) then
													v88[v90[2]] = v88[v90[3]][v88[v90[4]]];
												elseif (v88[v90[2]] == v88[v90[4]]) then
													v82 = v82 + 1;
												else
													v82 = v90[3];
												end
											elseif (v91 > 61) then
												v88[v90[2]]();
											elseif (v88[v90[2]] > v90[4]) then
												v82 = v82 + 1;
											else
												v82 = v90[3];
											end
										elseif (v91 <= 65) then
											if (v91 <= 63) then
												for v136 = v90[2], v90[3] do
													v88[v136] = nil;
												end
											elseif (v91 == 64) then
												if (v88[v90[2]] ~= v90[4]) then
													v82 = v82 + 1;
												else
													v82 = v90[3];
												end
											else
												local v224 = v90[2];
												do
													return v13(v88, v224, v224 + v90[3]);
												end
											end
										elseif (v91 <= 67) then
											if (v91 == 66) then
												local v225 = v90[2];
												local v226 = {v88[v225](v88[v225 + 1])};
												local v227 = 0;
												for v305 = v225, v90[4] do
													v227 = v227 + 1;
													v88[v305] = v226[v227];
												end
											elseif (v88[v90[2]] == v90[4]) then
												v82 = v82 + 1;
											else
												v82 = v90[3];
											end
										elseif (v91 > 68) then
											local v228 = 0;
											local v229;
											local v230;
											while true do
												if (v228 == 0) then
													v229 = v90[2];
													v230 = v88[v90[3]];
													v228 = 1;
												end
												if (v228 == 1) then
													v88[v229 + 1] = v230;
													v88[v229] = v230[v90[4]];
													break;
												end
											end
										else
											local v231 = 0;
											local v232;
											while true do
												if (v231 == 0) then
													v232 = v90[2];
													v88[v232](v88[v232 + 1]);
													break;
												end
											end
										end
									elseif (v91 <= 76) then
										if (v91 <= 72) then
											if (v91 <= 70) then
												local v129 = v90[2];
												v88[v129] = v88[v129](v13(v88, v129 + 1, v90[3]));
											elseif (v91 == 71) then
												local v233 = v90[2];
												do
													return v88[v233](v13(v88, v233 + 1, v90[3]));
												end
											elseif not v88[v90[2]] then
												v82 = v82 + 1;
											else
												v82 = v90[3];
											end
										elseif (v91 <= 74) then
											if (v91 > 73) then
												local v234 = v90[3];
												local v235 = v88[v234];
												for v308 = v234 + 1, v90[4] do
													v235 = v235 .. v88[v308];
												end
												v88[v90[2]] = v235;
											else
												v88[v90[2]] = v88[v90[3]] - v88[v90[4]];
											end
										elseif (v91 == 75) then
											v88[v90[2]] = v64[v90[3]];
										else
											local v240 = 0;
											local v241;
											local v242;
											while true do
												if (0 == v240) then
													v241 = v90[2];
													v242 = {};
													v240 = 1;
												end
												if (1 == v240) then
													for v388 = 1, #v87 do
														local v389 = v87[v388];
														for v401 = 0, #v389 do
															local v402 = v389[v401];
															local v403 = v402[1];
															local v404 = v402[2];
															if ((v403 == v88) and (v404 >= v241)) then
																v242[v404] = v403[v404];
																v402[1] = v242;
															end
														end
													end
													break;
												end
											end
										end
									elseif (v91 <= 79) then
										if (v91 <= 77) then
											local v131 = v88[v90[4]];
											if v131 then
												v82 = v82 + 1;
											else
												v88[v90[2]] = v131;
												v82 = v90[3];
											end
										elseif (v91 > 78) then
											local v245 = 0;
											local v246;
											while true do
												if (0 == v245) then
													v246 = v90[2];
													v88[v246] = v88[v246](v88[v246 + 1]);
													break;
												end
											end
										else
											v88[v90[2]] = #v88[v90[3]];
										end
									elseif (v91 <= 81) then
										if (v91 == 80) then
											v63[v90[3]] = v88[v90[2]];
										else
											local v250 = v90[2];
											local v251 = v90[4];
											local v252 = v250 + 2;
											local v253 = {v88[v250](v88[v250 + 1], v88[v252])};
											for v309 = 1, v251 do
												v88[v252 + v309] = v253[v309];
											end
											local v254 = v253[1];
											if v254 then
												v88[v252] = v254;
												v82 = v90[3];
											else
												v82 = v82 + 1;
											end
										end
									elseif (v91 > 82) then
										if (v90[2] < v88[v90[4]]) then
											v82 = v90[3];
										else
											v82 = v82 + 1;
										end
									else
										do
											return v88[v90[2]];
										end
									end
								elseif (v91 <= 97) then
									if (v91 <= 90) then
										if (v91 <= 86) then
											if (v91 <= 84) then
												local v132 = 0;
												local v133;
												while true do
													if (0 == v132) then
														v133 = v90[2];
														v88[v133](v88[v133 + 1]);
														break;
													end
												end
											elseif (v91 == 85) then
												local v255 = v90[2];
												local v256, v257 = v81(v88[v255](v13(v88, v255 + 1, v90[3])));
												v83 = (v257 + v255) - 1;
												local v258 = 0;
												for v313 = v255, v83 do
													local v314 = 0;
													while true do
														if (v314 == 0) then
															v258 = v258 + 1;
															v88[v313] = v256[v258];
															break;
														end
													end
												end
											else
												v88[v90[2]] = v90[3] ~= 0;
											end
										elseif (v91 <= 88) then
											if (v91 > 87) then
												local v260 = v90[2];
												do
													return v13(v88, v260, v83);
												end
											else
												local v261 = v90[2];
												v88[v261](v13(v88, v261 + 1, v83));
											end
										elseif (v91 == 89) then
											local v262 = 0;
											local v263;
											local v264;
											while true do
												if (v262 == 1) then
													for v392 = v263 + 1, v90[3] do
														v7(v264, v88[v392]);
													end
													break;
												end
												if (v262 == 0) then
													v263 = v90[2];
													v264 = v88[v263];
													v262 = 1;
												end
											end
										else
											local v265 = v90[2];
											v88[v265](v13(v88, v265 + 1, v90[3]));
										end
									elseif (v91 <= 93) then
										if (v91 <= 91) then
											if (v88[v90[2]] < v90[4]) then
												v82 = v82 + 1;
											else
												v82 = v90[3];
											end
										elseif (v91 == 92) then
											if (v88[v90[2]] ~= v88[v90[4]]) then
												v82 = v82 + 1;
											else
												v82 = v90[3];
											end
										else
											local v267 = v90[2];
											v88[v267] = v88[v267](v13(v88, v267 + 1, v90[3]));
										end
									elseif (v91 <= 95) then
										if (v91 == 94) then
											v63[v90[3]] = v88[v90[2]];
										else
											v88[v90[2]] = v90[3] / v90[4];
										end
									elseif (v91 == 96) then
										local v272 = 0;
										local v273;
										while true do
											if (v272 == 0) then
												v273 = v90[2];
												do
													return v88[v273](v13(v88, v273 + 1, v90[3]));
												end
												break;
											end
										end
									else
										v88[v90[2]] = v88[v90[3]][v90[4]];
									end
								elseif (v91 <= 104) then
									if (v91 <= 100) then
										if (v91 <= 98) then
											v88[v90[2]] = v63[v90[3]];
										elseif (v91 == 99) then
											if (v88[v90[2]] < v88[v90[4]]) then
												v82 = v82 + 1;
											else
												v82 = v90[3];
											end
										elseif v88[v90[2]] then
											v82 = v82 + 1;
										else
											v82 = v90[3];
										end
									elseif (v91 <= 102) then
										if (v91 > 101) then
											if (v90[2] < v88[v90[4]]) then
												v82 = v90[3];
											else
												v82 = v82 + 1;
											end
										else
											local v276 = 0;
											local v277;
											while true do
												if (v276 == 0) then
													v277 = v90[2];
													v88[v277] = v88[v277]();
													break;
												end
											end
										end
									elseif (v91 > 103) then
										for v315 = v90[2], v90[3] do
											v88[v315] = nil;
										end
									else
										v88[v90[2]] = v63[v90[3]];
									end
								elseif (v91 <= 107) then
									if (v91 <= 105) then
										if (v88[v90[2]] > v90[4]) then
											v82 = v82 + 1;
										else
											v82 = v90[3];
										end
									elseif (v91 > 106) then
										if (v90[2] < v88[v90[4]]) then
											v82 = v82 + 1;
										else
											v82 = v90[3];
										end
									else
										v88[v90[2]] = #v88[v90[3]];
									end
								elseif (v91 <= 109) then
									if (v91 == 108) then
										if (v90[2] == v88[v90[4]]) then
											v82 = v82 + 1;
										else
											v82 = v90[3];
										end
									else
										v88[v90[2]] = v88[v90[3]] + v88[v90[4]];
									end
								elseif (v91 > 110) then
									v88[v90[2]] = v88[v90[3]];
								else
									local v285 = v90[2];
									local v286 = v88[v285];
									local v287 = v90[3];
									for v317 = 1, v287 do
										v286[v317] = v88[v285 + v317];
									end
								end
								v82 = v82 + 1;
								break;
							end
							if (v94 == 0) then
								v90 = v78[v82];
								v91 = v90[1];
								v94 = 1;
							end
						end
					end
				end;
			end
		end
	end
	return v29(v28(), {}, v17)(...);
end
return vv9(), ...);